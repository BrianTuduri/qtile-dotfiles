---
# tasks file for vault-agent-docker
# Ansible Playbook to deploy Vault Agent automatically on servers

# - name: Get home user path
#   command: echo $HOME
#   register: user_home
# 
# - name: Set var vault_agent_dir
#   set_fact:
#     vault_agent_dir: "{{ user_home.stdout }}/vault-agent"
# 
# - name: Show war vault_agent_dir
#   debug:
#     msg: "vault_agent_dir es {{ vault_agent_dir }}"

- name: Install required packages
  apt:
    name:
      - docker.io
      - jq
    state: present
    update_cache: yes

- name: Start Docker service
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Create Vault Agent directory
  file:
    path: "{{ vault_agent_dir }}"
    state: directory
    mode: '0755'

- name: Write {{ app_name }}-vault-agent.hcl configuration file
  template:
    src: "templates/vault-agent-config.hcl.j2"
    dest: "{{ vault_agent_dir }}/{{ app_name }}-agent-config.hcl"

- name: Enable AppRole authentication
  command: "vault auth enable {{ auth_method }}"
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"

- name: Create AppRole role
  command: "vault write auth/{{ auth_method }}/role/{{ app_name }} token_policies={{ policies | join(',') }}"
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  when: auth_method == "approle" # toDO: queda implementar otros auths

- name: Read Role ID
  command: "vault read -format=json auth/{{ auth_method }}/role/{{ app_name }}/role-id | jq -r '.data.role_id' > {{ vault_agent_dir }}/{{ app_name }}-role_id"
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  args:
    creates: "{{ vault_agent_dir }}/{{ app_name }}-role_id"
  when: auth_method == "approle" # toDO: queda implementar otros auths

- name: Write Secret ID
  command: "vault write -format=json -f auth/{{ auth_method }}/role/{{ app_name }}/secret-id | jq -r '.data.secret_id' > {{ vault_agent_dir }}/{{ app_name }}-secret_id"
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  args:
    creates: "{{ vault_agent_dir }}/{{ app_name }}-secret_id"
  when: auth_method == "approle" # toDO: queda implementar otros auths

# Copia y corre servicio
- become: true
  block:
    - template:
        src: "{{ REPO_HOME }}/playbooks/files/docker_compose_service.j2"
        dest: "/etc/systemd/system/{{service_name}}"
        mode: "0755"
        owner: "{{ owner | default('geocom') }}"
        group: "{{ group | default('users') }}"
    - systemd:
        name: "{{service_name}}"
        state: restarted
        enabled: true
        daemon_reload: true
        force: true

- name: Deploy Docker Compose for Vault Agent
  copy:
    dest: "{{ vault_agent_dir }}/docker-compose.yml"
    content: |
      version: '3.7'
      services:
        vault-agent-demo:
          image: hashicorp/vault-enterprise:latest
          restart: always
          ports:
            - "18200:8200"
          volumes:
            - "{{ vault_agent_dir }}:/vault-agent:rw"
          environment:
            VAULT_ADDR: "{{ vault_addr }}"
          container_name: vault-agent-demo
          entrypoint: "vault agent -log-level debug -config=/vault-agent/{{ app_name }}-vault-agent.hcl"

- name: Start Vault Agent with Docker Compose
  command: docker-compose up -d
  args:
    chdir: "{{ vault_agent_dir }}"